swagger: '2.0'
info:
  version: '1.0'
  title: Competency API
  description: This API provides Competency Transactional Services
  contact:
    name: Jeff Woodel
    email: JWoodel@slb.com
  license:
    name: Schlumberger proprietary
externalDocs:
  description: "Find out more on the SLB WIKI"
  url: "https://wiki.slb.com/display/ea/Developer%27s+Guide+to+Self-Service"
# host: apigateway.evd.it.slb.com
# basePath: /risk-to-integrity/competency-competencydata
schemes:
 - https
consumes:
- application/json
produces:
- application/json
#Authentication    
security:
  - APIKeyHeader: []
  
paths:
  /pcp/{gin}:
    get:
      description: The current Personal Competency Profile
      summary: The current Personal Competency Profile
      operationId: pcp
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: path
        name: gin
        type: integer
        required: true
      responses:
        200:
          description: Personal Competency Profile
          schema:
            $ref: '#/definitions/PcpResponse'
          headers: {}          
  /competency-job:
    post:
      description: Persist Job for use in Competency Transactions
      summary: Persist Job for use in Competency Transactions
      operationId: competency-job
      deprecated: false
      consumes:
        - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/competencyPayloadParam'
      responses:
        200:
          description: Competency Internal Job ID
          schema:
            $ref: '#/definitions/JobId'
          headers: {}          
  /competency-job-id:
    get:
      description: Competency unique identifier for a Job
      summary: Returns the internal Competency indentifier for a Job
      operationId: competency-job-id
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: query
        name: externalJobId
        required: true
        type: string
      - in: query
        name: sourceSystemId
        type: integer
        required: true
      - in: query
        name: productLineId
        type: integer
        required: true
      - name: isCompetencySegmentId
        in: query
        required: false
        type: boolean
        description: ''
      responses:
        200:
          description: Auto generated using Swagger Inspector
          schema:
            $ref: '#/definitions/JobId'
          headers: {}
  /risk-calculation/{job-id}:
    get:
      description: Calculated risk level and score for Competency Job Id
      summary: Calculated risk level and score for Competency Job Id
      operationId: risk-calculation
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: path
        name: job-id
        type: integer
        required: true
      responses:
        200:
          description: Auto generated using Swagger Inspector
          schema:
            $ref: '#/definitions/RiskCalculatorResponse'
          headers: {}

  /jcr/{job-id}:
    get:
      description: Return calculated Job Compliance Requirements
      summary: Return calculated Job Compliance Requirements
      operationId: jcr
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: path
        name: job-id
        type: integer
        required: true
      responses:
        200:
          description: Job Compliance Requirements
          schema:
            $ref: '#/definitions/JCR'
          headers: {}
  /job-assignment-validation:
    post:
      description: Job Competency compliance
      summary: Job Competency compliance
      operationId: job-assignment-validation
      deprecated: false
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/jobAssignmentValidationRequestParam'
      responses:
        200:
          description: Competency Job Validation Results
          schema:
            $ref: '#/definitions/JobAssignmentValidationResponse'
          headers: {}          

  /assessment-eligibility:
    post:
      description: Check if a Gin is eligibile to take an assessment for a Competency Element and Proficiency Level
      summary: Check if a Gin is eligibile to take an assessment for a Competency Element and Proficiency Level
      operationId: assessment-eligibility
      deprecated: false
      consumes:
        - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/assessmentEligibilityRequestParam'
      responses:
        200:
          description: Eligibility Report
          schema:
            $ref: '#/definitions/AssessmentEligibilityResponse'
          headers: {}

  /jcr:
    get:
      description: Return calculated Job Compliance Requirements
      summary: Return calculated Job Compliance Requirements
      operationId: jcrExternal
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: query
        name: externalJobId
        type: string
        required: true
      - in: query
        name: sourceSystemId
        type: integer
        required: true
      - in: query
        name: productLineId
        type: integer
        required: true  
      - name: isCompetencySegmentId
        in: query
        required: false
        type: boolean
        description: ''
      responses:
        200:
          description: Job Compliance Requirements
          schema:
            $ref: '#/definitions/JCR'
          headers: {}

  /candidate-ranking:
    post:
      description: Competency Candidate ranking report for a Job
      summary: Competency Candidate ranking report for a Job
      operationId: candidate-ranking
      deprecated: false
      consumes:
        - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/candidateRankingRequestParam'
      responses:
        200:
          description: Competency Candidate ranking report
          schema:
            $ref: '#/definitions/CandidateRankingReportResponse'
          headers: {}

  /proficiency-expiration/{gin}:
    get:
      description: Proficiency Expiration Report
      summary: Proficiency Expiration Report
      operationId: proficiency-expiration
      deprecated: false
      produces:
      - application/json
      parameters:
      - in: path
        name: gin
        type: integer
        required: true
      responses:
        200:
          description: Proficiency Expiration Report
          schema:
            $ref: '#/definitions/CandidateProficiencyReportResponse'
          headers: {}

securityDefinitions:
  APIKeyHeader:
    type: "apiKey"
    name: "x-apikey"
    in: "header"
    
parameters:
  competencyPayloadParam:
    in: body
    name: body
    required: true
    description: ''
    schema:
      $ref: '#/definitions/CompetencyJobPayload'
      
  jobAssignmentValidationRequestParam:
    in: body
    name: body
    required: true
    description: ''
    schema:
      $ref: '#/definitions/JobAssignmentValidationRequest'
      
  assessmentEligibilityRequestParam:
    in: body
    name: body
    required: true
    description: ''
    schema:
      $ref: '#/definitions/AssessmentEligibilityRequest'
      
  candidateRankingRequestParam:
    in: body
    name: body
    required: true
    description: ''
    schema:
      $ref: '#/definitions/CandidateRankingReportRequest'
          
definitions:
 
  JobId:
    title: JobId
    type: integer
  RiskCalculatorResponse:
    title: RiskCalculatorResponse
    type: object
    properties:
      RiskScore:
        type: number
        format: double
      RiskLevel:
        type: integer
        format: int32
      JobId:
        type: number
        format: double
  AssessmentEligibilityResponse:
    title: AssessmentEligibilityResponse
    type: object
    properties:
      CandidateProficiencyResults:
        $ref: '#/definitions/CandidateProficiencyResults'
  CandidateProficiencyResults:
    title: CandidateProficiencyResults
    type: object
    properties:
      CandidateProficiencyResult:
        type: array
        items:
          $ref: '#/definitions/CandidateProficiencyResult'
  CandidateProficiencyResult:
    title: CandidateProficiencyResult
    type: object
    properties:
      CompetencyUnitID:
        type: integer
        format: int32
      AssessmentPathways:
        $ref: '#/definitions/AssessmentPathways'
      competencyElementSapID:
        type: integer
        format: int32
      segment:
        type: string
      proficiencyLevelID:
        type: integer
        format: int32
      competencyUnitSapID:
        type: integer
        format: int32
      candidateGIN:
        type: integer
        format: int32
      CompetencyElementID:
        type: integer
        format: int32
  AssessmentPathways:
    title: AssessmentPathways
    type: object
    properties:
      AssessmentPathway:
        type: array
        items:
          $ref: '#/definitions/AssessmentPathway'
  AssessmentPathway:
    title: AssessmentPathway
    type: object
    properties:
      startingProficiencyLevel:
        type: string
      attemptedProficiencyLevel:
        type: string
      attemptedOn:
        type: number
        format: double
      assessmentEligible:
        type: string
      exceptions:
        type: array
        items:
          $ref: '#/definitions/Exception'
      target:
        type: string
  Exception:
    title: Exception
    type: object
    properties:
      reason:
        type: string
      reasonCode:
        type: integer
        format: int32
  JCR:
    title: JCR
    type: object
    properties:
      subJobSection:
        $ref: '#/definitions/SubJobSection'
      segment:
        type: string
      jobSection:
        $ref: '#/definitions/JobSection'
  SubJobSection:
    title: SubJobSection
    type: object
    properties:
      subJobs:
        type: object
  JobSection:
    title: JobSection
    type: object
    properties:
      externalJobID:
        type: string
      ID:
        type: number
        format: double
      items:
        type: array
        items:
          $ref: '#/definitions/JobItems'
  JobItems:
    title: JobItems
    type: object
    properties:
      competencyElement:
        type: string
      role:
        type: string
      roleID:
        type: integer
        format: int32
      competencyUnitName:
        type: string
      proficiencyLevel:
        type: string
      competencyElementID:
        type: integer
        format: int32
      competencyUnitID:
        type: integer
        format: int32
      roleType:
        type: string
  JobAssignmentValidationRequest:
    title: CompetencyRESTRestValidateAssignmentReportRequest
    type: object
    properties:
      jobId:
        type: string
      roleCandidatesList:
        type: array
        items:
          $ref: '#/definitions/RoleCandidatesList'
  RoleCandidatesList:
    title: RoleCandidatesList
    type: object
    properties:
      Role:
        type: string
      Candidates:
        $ref: '#/definitions/Candidates'
  Candidates:
    title: Candidates
    type: object
    properties:
      Candidate:
        type: array
        items:
          type: string
  JobAssignmentValidationResponse:
    title: JobAssignmentValidationResponse
    type: object
    properties:
      individualRoles:
        type: array
        items:
          type: string
      jobID:
        type: number
        format: double
      collectiveRoles:
        type: array
        items:
          $ref: '#/definitions/CollectiveRole'
      compliance:
        type: boolean
      subJobs:
        type: array
        items:
          type: string
  CollectiveRole:
    title: CollectiveRole
    type: object
    properties:
      Role:
        type: string
      Compliance:
        type: boolean
      Competencies:
        $ref: '#/definitions/Competencies'
      roleID:
        type: integer
        format: int32
      People:
        type: object
      Reason:
        type: string
  Competencies:
    title: Competencies
    type: object
    properties:
      Competency:
        type: array
        items:
          $ref: '#/definitions/Competency'
  Competency:
    title: Competency
    type: object
    properties:
      competencyElementName:
        type: string
      proficiencyLevel:
        type: string
      competencyElementID:
        type: integer
        format: int32
      competencyUnitID:
        type: integer
        format: int32
      CompetencyElementSapID:
        type: integer
        format: int32
      ComplianceLevel:
        type: string
  CandidateRankingReportRequest:
    title: CandidateRankingReportRequest
    type: object
    properties:
      jobId:
        type: string
      candidates:
        type: array
        items:
          $ref: '#/definitions/RoleCandidates'
      multiShift:
        type: string
  RoleCandidates:
    title: RoleCandidates
    type: object
    properties:
      role:
        type: string
      candidateGINs:
        type: array
        items:
          type: string
  CandidateRankingReportResponse:
    title: CandidateRankingReportResponse
    type: object
    properties:
      jobId:
        type: number
        format: double
      multiShift:
        type: boolean
      externalJobId:
        type: string
      jobRequirements:
        type: array
        items:
          $ref: '#/definitions/JobRequirement'
  JobRequirement:
    title: JobRequirement
    type: object
    properties:
      role:
        type: string
      requiredElements:
        type: array
        items:
          $ref: '#/definitions/RequiredElement'
      roleID:
        type: integer
        format: int32
      externalJobID:
        type: string
      subJobID:
        type: integer
        format: int32
      competencies:
        type: array
        items:
          type: string
  RequiredElement:
    title: RequiredElement
    type: object
    properties:
      competencyElement:
        type: string
      competencyUnitName:
        type: string
      proficiencyLevel:
        type: string
      competencyElementID:
        type: integer
        format: int32
      competencyUnitID:
        type: integer
        format: int32
  CompetencyJobPayload:
    title: CompetencyJobPayload
    type: object
    properties:
      AssetCodes:
        $ref: '#/definitions/AssetCodes'
      Services:
        $ref: '#/definitions/Services'
      Products:
        $ref: '#/definitions/Products'
      CompletionCodes:
        $ref: '#/definitions/CompletionCodes'
      SegmentId:
        type: string
      JobAttributes:
        $ref: '#/definitions/JobAttributes'
      PenetratorCodes:
        $ref: '#/definitions/PenetratorCodes'
      ExternalJobId:
        type: string
      SpsServiceLines:
        $ref: '#/definitions/SpsServiceLines'
      SourceSystemId:
        type: string
      ExtendedJobTypes:
        $ref: '#/definitions/ExtendedJobTypes'
      ServiceTypes:
        $ref: '#/definitions/ServiceTypes'
  AssetCodes:
    title: AssetCodes
    type: object
    properties:
      AssetCode:
        type: array
        items:
          $ref: '#/definitions/AssetCode'
  AssetCode:
    title: AssetCode
    type: object
    properties:
      AssetCodeName:
        type: string
  Services:
    title: Services
    type: object
    properties:
      Service:
        type: array
        items:
          type: integer
          format: int32
  Products:
    title: Products
    type: object
    properties:
      Product:
        type: array
        items:
          $ref: '#/definitions/Product'
  Product:
    title: Product
    type: object
    properties:
      ProductName:
        type: string
      ProductId:
        type: string
  CompletionCodes:
    title: CompletionCodes
    type: object
    properties:
      CompletionCode:
        type: array
        items:
          type: integer
          format: int32
  JobAttributes:
    title: JobAttributes
    type: object
    properties:
      JobAttribute:
        type: array
        items:
          $ref: '#/definitions/JobAttribute'
  JobAttribute:
    title: JobAttribute
    type: object
    properties:
      AttributeValue:
        type: string
      AttributeId:
        type: string
  PenetratorCodes:
    title: PenetratorCodes
    type: object
    properties:
      PenetratorCode:
        type: array
        items:
          type: integer
          format: int32
  SpsServiceLines:
    title: SpsServiceLines
    type: object
    properties:
      SpsServiceLine:
        type: array
        items:
          $ref: '#/definitions/SpsServiceLine'
  SpsServiceLine:
    title: SpsServiceLine
    type: object
    properties:
      TypeId:
        type: integer
        format: int32
      SubTypeId:
        type: integer
        format: int32
      GroupId:
        type: integer
        format: int32
  ExtendedJobTypes:
    title: ExtendedJobTypes
    type: object
    properties:
      ExtendedJobType:
        type: array
        items:
          type: string
  ServiceTypes:
    title: ServiceTypes
    type: object
    properties:
      ServiceType:
        type: array
        items:
          type: string
  Exceptions:
    properties:
      reason:
        type: string
      reasonCode:
        type: integer
        format: int32
      ruleName:
        type: string
      rulePackage:
        type: string
  AttemptedPathways:
    properties:
      attemptedOn:
        type: string
      attemptedProficiencyLevel:
        type: string
      exceptions:
        type: array
        items:
          $ref: '#/definitions/Exceptions'
      startingProficiencyLevel:
        type: string
      success:
        type: boolean
      target:
        type: string
  PCPItems:
    properties:
      attemptedPathways:
        type: array
        items:
          $ref: '#/definitions/AttemptedPathways'
      awardedOn:
        type: string
      competencyElement:
        type: string
      competencyElementID:
        type: integer
        format: int32
      competencyElementSapID:
        type: integer
        format: int32
      competencyUnitID:
        type: integer
        format: int32
      competencyUnitName:
        type: string
      competencyUnitSapID:
        type: integer
        format: int32
      gin:
        type: integer
        format: int32
      proficiencyLevel:
        type: string
  PcpResponse:
    properties:
      gin:
        type: integer
        format: int32
      items:
        type: array
        items:
          $ref: '#/definitions/PCPItems'
  AssessmentEligibilityRequest:
    type: array
    items:
      $ref: '#/definitions/AssessmentEligibilityList'
  AssessmentEligibilityList:
    properties:
      CandidateGINs:
        $ref: '#/definitions/CandidateGINs'
      competencyElementID:
        type: string
      proficiencyLevelID:
        type: string
  CandidateGINs:
    properties:
      CandidateGIN:
        type: array
        items:
          type: string
  CandidateProficiencyReportResponse: 
    type: array
    items: 
      type: object
      properties: 
        gin: 
          type: integer
          format: int32
        segment: 
          type: string
        Proficiencies: 
          type: object
          properties: 
            Proficiency: 
              type: array
              items: 
                type: object
                properties: 
                  competencyElementSapID: 
                    type: integer
                    format: int32
                  competencyUnitSapID: 
                    type: integer
                    format: int32
                  proficiencyLevelID: 
                    type: integer
                    format: int32
                  CompetencyElementID: 
                    type: integer
                    format: int32
                  CompetencyUnitID: 
                    type: integer
                    format: int32
                  Criterias: 
                    type: object
                    properties: 
                      Criteria: 
                        type: array
                        items: 
                          type: object
                          properties: 
                            accomplishedRecords: 
                              type: integer
                              format: int32
                            criteria: 
                              type: string
                            expirationDate: 
                              type: string
                            requiredRecords: 
                              type: integer
                              format: int32
                            subType: 
                              type: string
                            type: 
                              type: string
 
tags: []
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /will-mock/Competency-API/1.0